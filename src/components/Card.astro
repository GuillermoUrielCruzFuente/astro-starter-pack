---
import { dateFormatter, extractNLetters } from "../utils";

export type Props = {
	title: string;
	date: string;
	description: string;
	imageUrl: string;
};

const { title, date, description, imageUrl } = Astro.props;
---

<script>
	type ImageLoadHandler = (
		this: HTMLImageElement,
		event: HTMLElementEventMap["load"]
	) => void;

	const images = document.querySelectorAll(
		".image-container > img"
	) as NodeListOf<HTMLImageElement>;

	const handleImageLoad: ImageLoadHandler = (loadEvent) => {
		const image = loadEvent.target as HTMLImageElement;
		image.classList.remove("invisible");
		image.classList.add("visible");
	};

	images.forEach((img) => {
		img.addEventListener("load", handleImageLoad, { once: true });
	});
</script>

<section class="card">
	<h1 title={title}>{extractNLetters(title, 50)}</h1>

	<time>{dateFormatter(date)}</time>

	{
		imageUrl ? (
			<div class="image-container">
				<img
					class="image invisible"
					src={imageUrl}
					alt={`${title}, blog image`}
					loading="lazy"
				/>
			</div>
		) : null
	}

	<p>{extractNLetters(description, 120)}</p>

	<button>Read</button>
</section>

<style scoped lang="scss">
	.card {
		width: 100%;
		height: 100%;
		background-color: #222;
		border-radius: 10px;
		padding: 1rem;
		box-sizing: border-box;
		display: flex;
		flex-flow: column;
		position: relative;

		h1 {
			margin: 0;
			font-size: 1rem;
			font-weight: 900;
			color: #ddd;
			text-transform: uppercase;
		}

		time {
			color: #ccc;
			display: block;
			font-weight: 100;
			font-size: 0.85rem;
		}

		.image-container {
			width: 100%;
			aspect-ratio: 1.5;
			overflow: hidden;
			border-radius: 5px;
			display: flex;
			flex-flow: column nowrap;
			align-items: center;
			justify-content: center;
			margin-block: 0.5rem;
			background-color: #000;

			img.image {
				width: 100%;
				object-fit: cover;
				object-position: center;
				transition:
					transform 300ms,
					opacity 800ms;

				&:hover {
					transform: scale(1.15) rotate(3deg);
				}
			}

			.invisible {
				opacity: 0;
			}

			.visible {
				opacity: 1;
			}
		}

		p {
			font-weight: 400;
			font-size: 0.85rem;
			color: #999;
		}

		button {
			margin-top: auto;
			width: 100%;
			background-color: #000;
			outline: none;
			border: none;
			padding: 0.5rem;
			color: #eee;
			font-weight: 900;
			font-family: inherit;
			border-radius: 0.5rem;
			transition:
				background-color 300ms,
				color 300ms,
				box-shadow 300ms;
			cursor: pointer;

			&:hover {
				background-color: #0c0c0c;
				color: #fff;
				box-shadow: 0 0 20px 0 rgba(#999, 0.25);
			}
		}
	}
</style>
